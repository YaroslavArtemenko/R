while(F < p){
i = i + 1
F = F + pn[i]
}
i
}
n = 5
p01 = c(0, 0, 1, 0, 0)
p02 = c(0.1, 0.2, 0.3, 0.3, 0.1)
m = 10
states1 = c()
states2 = c()
P = matrix(data = c(1/n), nrow = n, ncol = n)
P[1, ] = c(1, 0, 0, 0, 0)
ps1 = runif(m + 1)
ps2 = runif(m + 1)
pn1 = c()
pn2 = c()
states1[1] = get_state(p01, ps1[1])
for (i in 1:(m - 1)){
states1[i + 1] = get_state(P[states1[i], ], ps1[i + 1])
}
states2[1] = get_state(p02, ps2[1])
for (i in 1:(m - 1)){
pn = p02*P
states2[i + 1] = get_state(P[states2[i], ], ps2[i + 1])
}
print(states1)
print(states2)
N<-2000
z <- runif(n =2000 ,min=0, max=10)
R <- (max(z) - min(z))
k = round(1 + 3.3*log10(N))
dx <- R/k
n<-c()
v<-c()
vt<-c()
for(i in 1:k){
n[i] <- length(z[z >= min(z) + (i-1)*dx & z <= (min(z) + i*dx)])
v[i]<-n[i]/1000
vt[i]<-((v[i]-dx)^2)/dx
}
sum(n)
sum(v)
xi2<-sum(vt)
Xi2<-qchisq(p=0.95, df=7)
if(xi2>Xi2){
answer<-"Отклоняем гипотезу";
}else{
answer<-"Нет смысла отклонить гипотезу";
}
hist(z, col="blue")
print(answer)
#1
N = 100000;
X = runif(N, 0, 1);
Y = runif(N, 0, 14);
ctr = 0;
for (i in 1:N) {
if (Y[i] <= (X[i]^7+X[i]^5+X[i]^3)){
ctr = ctr + 1;
}
}
result1<-ctr/N*14*1
print(result1)
#f <- function(x) (x^7+x^5+x^3)
#n <- 1e6
#x <- runif(n)
#I <- sum(f(x))/n
#integrate(f,0,1)
#?????????? ?????????: 0.5416667 with absolute error < 6e-15
#--------------------------------------------
#2
N = 100000;
X1 = runif(N, 0, pi / 3);
X2 = runif(N, pi / 3, 2 * pi / 3);
X3 = runif(N, 2 * pi / 3, pi);
Y1 = runif(N, 0, 2);
Y2 = runif(N, -2, 0);
Y3 = runif(N, 0, 2);
ctr1 = 0;
ctr2 = 0;
for (i in 1:N) {
if (Y1[i] <= 2 * sin(X1[i] * 3)) {
ctr1 = ctr1 + 1;
}
if (Y2[i] >= 2 * sin(X2[i] * 3)) {
ctr2 = ctr2 + 1;
}
}
square1 = ctr1 / N * 2 * pi / 3 * 2;
square2 = ctr2 / N * pi / 3 * 2;
print(square1);
print(square2);
result2<-square1-square2
print(result2)
# f <- function(x) (2*(sin(3*x)))
# n <- 1e6
# x <- runif(n)
# I <- sum(f(x))/n
# integrate(f,0,pi)
# ?????????? ?????????: 1.333333 with absolute error < 1.2e-12
#--------------------------------------------
#3
#1varaiat
N = 100000;
u = runif(N, 0, 1);
X = runif(N, 0, 1);
Y = runif(N, 0, 1);
U = runif(N, 0, 1);
ctr4 = 0;
ctr5 = 0;
for (i in 1:N) {
if (Y[i] <= 1/((1+x[i]) *X[i]^(1/2))) {
ctr4 = ctr4 + 1;
}
}
for (i in 1:N) {
if (U[i] <= 1/((1+(1/u[i])* u[i]^2*u[i]^(-1/2)))) {
ctr5 = ctr5 + 1;
}
}
square3 = ctr4 / N*10;
square4 = ctr5 / N*10;
result3 = (square3 + square4)/2
print(result3)
#2variant
N = 1000
f = function(x) { 1/((x+1)*x^(1/2)) }
b = 1
a = 0
x = runif(N, 0, 1)
sum = 0
for(i in 1:N){
sum = sum + f(x[i])
}
I=2 * sum / N
I
#
# f <- function(x) (1/((x+1)*sqrt(x)))
# n <- 1e6
# x <- runif(n)
# I <- sum(f(x))/n
# integrate(f,0,Inf)
# ?????????? ?????????: 3.141593 with absolute error < 2.7e-05
#1
N = 100000;
X = runif(N, 0, 1);
Y = runif(N, 0, 14);
ctr = 0;
for (i in 1:N) {
if (Y[i] <= (X[i]^7+X[i]^5+X[i]^3)){
ctr = ctr + 1;
}
}
result1<-ctr/N*14*1
print(result1)
#f <- function(x) (x^7+x^5+x^3)
#n <- 1e6
#x <- runif(n)
#I <- sum(f(x))/n
#integrate(f,0,1)
#?????????? ?????????: 0.5416667 with absolute error < 6e-15
#--------------------------------------------
#2
N = 100000;
X1 = runif(N, 0, pi / 3);
X2 = runif(N, pi / 3, 2 * pi / 3);
X3 = runif(N, 2 * pi / 3, pi);
Y1 = runif(N, 0, 2);
Y2 = runif(N, -2, 0);
Y3 = runif(N, 0, 2);
ctr1 = 0;
ctr2 = 0;
for (i in 1:N) {
if (Y1[i] <= 2 * sin(X1[i] * 3)) {
ctr1 = ctr1 + 1;
}
if (Y2[i] >= 2 * sin(X2[i] * 3)) {
ctr2 = ctr2 + 1;
}
}
square1 = ctr1 / N * 2 * pi / 3 * 2;
square2 = ctr2 / N * pi / 3 * 2;
print(square1);
print(square2);
result2<-square1-square2
print(result2)
# f <- function(x) (2*(sin(3*x)))
# n <- 1e6
# x <- runif(n)
# I <- sum(f(x))/n
# integrate(f,0,pi)
# ?????????? ?????????: 1.333333 with absolute error < 1.2e-12
#--------------------------------------------
#3
#1varaiat
N = 100000;
u = runif(N, 0, 1);
X = runif(N, 0, 1);
Y = runif(N, 0, 1);
U = runif(N, 0, 1);
ctr4 = 0;
ctr5 = 0;
for (i in 1:N) {
if (Y[i] <= 1/((1+x[i]) *X[i]^(1/2))) {
ctr4 = ctr4 + 1;
}
}
for (i in 1:N) {
if (U[i] <= 1/((1+(1/u[i])* u[i]^2*u[i]^(-1/2)))) {
ctr5 = ctr5 + 1;
}
}
square3 = ctr4 / N*10;
square4 = ctr5 / N*10;
result3 = (square3 + square4)/2
print(result3)
#2variant
N = 1000
f = function(x) { 1/((x+1)*x^(1/2)) }
b = 1
a = 0
x = runif(N, 0, 1)
sum = 0
for(i in 1:N){
sum = sum + f(x[i])
}
I=2 * sum / N
I
#
# f <- function(x) (1/((x+1)*sqrt(x)))
# n <- 1e6
# x <- runif(n)
# I <- sum(f(x))/n
# integrate(f,0,Inf)
# ?????????? ?????????: 3.141593 with absolute error < 2.7e-05
library(nortest)
N=1000
n=c(3,12,48)
ksi_1 <- function(N){
a1 <- runif(N)
a2 <- runif(N)
ksi <- c()
for(i in 1:N){
ksi[i] = sqrt(-2*log(a1[i]))*cos(2*pi*a2[i])
}
return(ksi)
}
ksi_2 <- function(N){
a1 <- runif(N)
a2 <- runif(N)
ksi <- c()
for(i in 1:N){
ksi[i] = sqrt(-2*log(a1[i]))*sin(2*pi*a2[i])
}
return(ksi)
}
N=1000
n=c(3,12,48)
ksi_3 = function(N,n){
ksi= c()
for(k in length(n)){
for(i in 1:N){
ksi[i]=0;
a=runif(200)
for(j in 1:n[k]){
ksi[i]=ksi[i]+sqrt(12/n[k])*(a[j]-0.5)
}}}
ksi
}
shapiro.test(ksi_1(N))
hist(ksi_1(N), col = "lightgreen")
shapiro.test(ksi_2(N))
hist(ksi_2(N), col = "darkred")
for(i in 1:3){
print(shapiro.test(ksi_3(N,n[i])))
hist(ksi_3(N,n[i]), col = "lightyellow")
}
N<-2000
z <- runif(n =2000 ,min=0, max=10)
R <- (max(z) - min(z))
k = round(1 + 3.3*log10(N))
dx <- R/k
n<-c()
v<-c()
vt<-c()
for(i in 1:k){
n[i] <- length(z[z >= min(z) + (i-1)*dx & z <= (min(z) + i*dx)])
v[i]<-n[i]/1000
vt[i]<-((v[i]-dx)^2)/dx
}
sum(n)
sum(v)
xi2<-sum(vt)
Xi2<-qchisq(p=0.95, df=7)
if(xi2>Xi2){
answer<-"Отклоняем гипотезу";
}else{
answer<-"Нет смысла отклонить гипотезу";
}
hist(z, col="blue")
print(answer)
#1
N = 100000;
X = runif(N, 0, 1);
Y = runif(N, 0, 14);
ctr = 0;
for (i in 1:N) {
if (Y[i] <= (X[i]^7+X[i]^5+X[i]^3)){
ctr = ctr + 1;
}
}
result1<-ctr/N*14*1
print(result1)
#f <- function(x) (x^7+x^5+x^3)
#n <- 1e6
#x <- runif(n)
#I <- sum(f(x))/n
#integrate(f,0,1)
#?????????? ?????????: 0.5416667 with absolute error < 6e-15
#--------------------------------------------
#2
N = 100000;
X1 = runif(N, 0, pi / 3);
X2 = runif(N, pi / 3, 2 * pi / 3);
X3 = runif(N, 2 * pi / 3, pi);
Y1 = runif(N, 0, 2);
Y2 = runif(N, -2, 0);
Y3 = runif(N, 0, 2);
ctr1 = 0;
ctr2 = 0;
for (i in 1:N) {
if (Y1[i] <= 2 * sin(X1[i] * 3)) {
ctr1 = ctr1 + 1;
}
if (Y2[i] >= 2 * sin(X2[i] * 3)) {
ctr2 = ctr2 + 1;
}
}
square1 = ctr1 / N * 2 * pi / 3 * 2;
square2 = ctr2 / N * pi / 3 * 2;
print(square1);
print(square2);
result2<-square1-square2
print(result2)
# f <- function(x) (2*(sin(3*x)))
# n <- 1e6
# x <- runif(n)
# I <- sum(f(x))/n
# integrate(f,0,pi)
# ?????????? ?????????: 1.333333 with absolute error < 1.2e-12
#--------------------------------------------
#3
#1varaiat
N = 100000;
u = runif(N, 0, 1);
X = runif(N, 0, 1);
Y = runif(N, 0, 1);
U = runif(N, 0, 1);
ctr4 = 0;
ctr5 = 0;
for (i in 1:N) {
if (Y[i] <= 1/((1+x[i]) *X[i]^(1/2))) {
ctr4 = ctr4 + 1;
}
}
for (i in 1:N) {
if (U[i] <= 1/((1+(1/u[i])* u[i]^2*u[i]^(-1/2)))) {
ctr5 = ctr5 + 1;
}
}
square3 = ctr4 / N*10;
square4 = ctr5 / N*10;
result3 = (square3 + square4)/2
print(result3)
#2variant
N = 1000
f = function(x) { 1/((x+1)*x^(1/2)) }
b = 1
a = 0
x = runif(N, 0, 1)
sum = 0
for(i in 1:N){
sum = sum + f(x[i])
}
I=2 * sum / N
I
#
# f <- function(x) (1/((x+1)*sqrt(x)))
# n <- 1e6
# x <- runif(n)
# I <- sum(f(x))/n
# integrate(f,0,Inf)
# ?????????? ?????????: 3.141593 with absolute error < 2.7e-05
library(nortest)
N=1000
n=c(3,12,48)
ksi_1 <- function(N){
a1 <- runif(N)
a2 <- runif(N)
ksi <- c()
for(i in 1:N){
ksi[i] = sqrt(-2*log(a1[i]))*cos(2*pi*a2[i])
}
return(ksi)
}
ksi_2 <- function(N){
a1 <- runif(N)
a2 <- runif(N)
ksi <- c()
for(i in 1:N){
ksi[i] = sqrt(-2*log(a1[i]))*sin(2*pi*a2[i])
}
return(ksi)
}
N=1000
n=c(3,12,48)
ksi_3 = function(N,n){
ksi= c()
for(k in length(n)){
for(i in 1:N){
ksi[i]=0;
a=runif(200)
for(j in 1:n[k]){
ksi[i]=ksi[i]+sqrt(12/n[k])*(a[j]-0.5)
}}}
ksi
}
shapiro.test(ksi_1(N))
hist(ksi_1(N), col = "lightgreen")
shapiro.test(ksi_2(N))
hist(ksi_2(N), col = "darkred")
for(i in 1:3){
print(shapiro.test(ksi_3(N,n[i])))
hist(ksi_3(N,n[i]), col = "lightyellow")
}
n<-0
for (i in 1:100)
{
x<-runif(rnorm(1000), 0, 1);
n[i]<-max(x);
}
hist(n, col="blue")
n<-0
for (i in 1:100)
{
x<-rnorm(1000);
n[i]<-max(x);
}
hist(n, col="blue")
#n=1/2
library(ggplot2)
library(reshape2)
N = 100
t=10
ksi_a = function(t){
eta1 = c(); eta2 = c(); ksi=0
for(i in 1:1000){
eta1=rnorm(1,mean = 0, sd = (1/( (1 + pi * i^2))))
eta2=rnorm(1,mean = 0, sd = (1/( (1 + pi * i^2))))
ksi=ksi+cos(i*pi*t)*eta1+sin(i*pi*t)*eta2
}
ksi
}
a=matrix(data = NA,nrow = N,ncol = t);qa=c()
for (j in 1:t) {
for(i in 1:N){
a[i,j]=ksi_a(j)
}
plot(a[,j],xlim = c(1,N),type = "l")
par(new= TRUE)
qa[j]=mean(a[,j])
}
plot(qa, col="darkblue")
me1=mean(a)
print(mean(a))
D1=0
for (j in 1:t){
for(i in 1:N){
D1=D1 + sqrt(((a[i,j]-me)^2)/N)
}
}
print(D1)
cor(a)
library(Hmisc)
b=rcorr(a)
cor(a,method="pearson")
#-------------------------------------------------
#n=1
library(ggplot2)
library(reshape2)
N = 100
t=10
ksi_a = function(t){
eta1 = c(); eta2 = c(); ksi=0
for(i in 1:1000){
eta1=rnorm(1,mean = 0, sd = (1/( (1 + pi * i^2)^2)))
eta2=rnorm(1,mean = 0, sd = (1/( (1 + pi * i^2)^2)))
ksi=ksi+cos(i*pi*t)*eta1+sin(i*pi*t)*eta2
}
ksi
}
a=matrix(data = NA,nrow = N,ncol = t);qa=c()
for (j in 1:t) {
for(i in 1:N){
a[i,j]=ksi_a(j)
}
plot(a[,j],xlim = c(1,N),type = "l")
par(new= TRUE)
qa[j]=mean(a[,j])
}
