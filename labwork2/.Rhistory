temp_intervals[j] = rpois(n = 1, lambda);
single_realization[j + 1] = single_realization[j] +
temp_intervals[j];
if (j == k) {
average_k_time[i] = temp_intervals[j];
}
}
intervals[i] = mean(temp_intervals)/10;
realizations[[i]] = single_realization;
max_realization_values[i] = max(single_realization);
step_functions[[i]] = stepfun(y = seq(0, m + 1), x =
single_realization);
single_realization= 0;
}
max_realization_value = max(max_realization_values);
for (i in 1:10) {
plot.stepfun(x = step_functions[[i]], do.points = TRUE, col.points = i *
10, col.hor = i * 10, verticals = FALSE,
lwd = 3, xlab = "Time", ylab = "", main = "", xlim = c(0,max_realization_value));
par(new = TRUE);
}
plot.stepfun(x = step_functions[[11]], do.points = TRUE, col.points = 110,
col.hor = 110, verticals = FALSE,
lwd = 3, xlab = "Time", ylab = "", main = "", xlim = c(0,max_realization_value));
title(main = "Poisson process realizations", cex.main = 1.9)
#graphics
m =250;
k = 5;
n = 17;
lambda = 3;
single_realization= 0;
realizations = list();
step_functions = list();
max_realization_values = c();
intervals = c();
average_k_time = 0;
for (i in 1:11) {
temp_intervals = 0;
for (j in 1:m) {
temp_intervals[j] = rpois(n = 1, lambda);
single_realization[j + 1] = single_realization[j] +
temp_intervals[j];
if (j == k) {
average_k_time[i] = temp_intervals[j];
}
}
intervals[i] = mean(temp_intervals);
realizations[[i]] = single_realization;
max_realization_values[i] = max(single_realization);
step_functions[[i]] = stepfun(y = seq(0, m + 1), x =
single_realization);
single_realization= 0;
}
max_realization_value = max(max_realization_values);
for (i in 1:10) {
plot.stepfun(x = step_functions[[i]], do.points = TRUE, col.points = i *
10, col.hor = i * 10, verticals = FALSE,
lwd = 3, xlab = "Time", ylab = "", main = "", xlim = c(0,max_realization_value));
par(new = TRUE);
}
plot.stepfun(x = step_functions[[11]], do.points = TRUE, col.points = 110,
col.hor = 110, verticals = FALSE,
lwd = 3, xlab = "Time", ylab = "", main = "", xlim = c(0,max_realization_value));
title(main = "Poisson process realizations", cex.main = 1.9)
#graphics
m =25;
k = 5;
n = 17;
lambda = 1/3;
single_realization= 0;
realizations = list();
step_functions = list();
max_realization_values = c();
intervals = c();
average_k_time = 0;
for (i in 1:11) {
temp_intervals = 0;
for (j in 1:m) {
temp_intervals[j] = rpois(n = 1, lambda);
single_realization[j + 1] = single_realization[j] +
temp_intervals[j];
if (j == k) {
average_k_time[i] = temp_intervals[j];
}
}
intervals[i] = mean(temp_intervals);
realizations[[i]] = single_realization;
max_realization_values[i] = max(single_realization);
step_functions[[i]] = stepfun(y = seq(0, m + 1), x =
single_realization);
single_realization= 0;
}
max_realization_value = max(max_realization_values);
for (i in 1:10) {
plot.stepfun(x = step_functions[[i]], do.points = TRUE, col.points = i *
10, col.hor = i * 10, verticals = FALSE,
lwd = 3, xlab = "Time", ylab = "", main = "", xlim = c(0,max_realization_value));
par(new = TRUE);
}
plot.stepfun(x = step_functions[[11]], do.points = TRUE, col.points = 110,
col.hor = 110, verticals = FALSE,
lwd = 3, xlab = "Time", ylab = "", main = "", xlim = c(0,max_realization_value));
title(main = "Poisson process realizations", cex.main = 1.9)
#graphics
m =25;
k = 5;
n = 17;
lambda = 1/3;
single_realization= 0;
realizations = list();
step_functions = list();
max_realization_values = c();
intervals = c();
average_k_time = 0;
for (i in 1:11) {
temp_intervals = 0;
for (j in 1:m) {
temp_intervals[j] = rexp(n = 1, lambda);
single_realization[j + 1] = single_realization[j] +
temp_intervals[j];
if (j == k) {
average_k_time[i] = temp_intervals[j];
}
}
intervals[i] = mean(temp_intervals);
realizations[[i]] = single_realization;
max_realization_values[i] = max(single_realization);
step_functions[[i]] = stepfun(y = seq(0, m + 1), x =
single_realization);
single_realization= 0;
}
max_realization_value = max(max_realization_values);
for (i in 1:10) {
plot.stepfun(x = step_functions[[i]], do.points = TRUE, col.points = i *
10, col.hor = i * 10, verticals = FALSE,
lwd = 3, xlab = "Time", ylab = "", main = "", xlim = c(0,max_realization_value));
par(new = TRUE);
}
plot.stepfun(x = step_functions[[11]], do.points = TRUE, col.points = 110,
col.hor = 110, verticals = FALSE,
lwd = 3, xlab = "Time", ylab = "", main = "", xlim = c(0,max_realization_value));
title(main = "Poisson process realizations", cex.main = 1.9)
#graphics
m =25;
k = 5;
n = 17;
lambda = 3;
single_realization= 0;
realizations = list();
step_functions = list();
max_realization_values = c();
intervals = c();
average_k_time = 0;
for (i in 1:11) {
temp_intervals = 0;
for (j in 1:m) {
temp_intervals[j] = rexp(n = 1, lambda);
single_realization[j + 1] = single_realization[j] +
temp_intervals[j];
if (j == k) {
average_k_time[i] = temp_intervals[j];
}
}
intervals[i] = mean(temp_intervals);
realizations[[i]] = single_realization;
max_realization_values[i] = max(single_realization);
step_functions[[i]] = stepfun(y = seq(0, m + 1), x =
single_realization);
single_realization= 0;
}
max_realization_value = max(max_realization_values);
for (i in 1:10) {
plot.stepfun(x = step_functions[[i]], do.points = TRUE, col.points = i *
10, col.hor = i * 10, verticals = FALSE,
lwd = 3, xlab = "Time", ylab = "", main = "", xlim = c(0,max_realization_value));
par(new = TRUE);
}
plot.stepfun(x = step_functions[[11]], do.points = TRUE, col.points = 110,
col.hor = 110, verticals = FALSE,
lwd = 3, xlab = "Time", ylab = "", main = "", xlim = c(0,max_realization_value));
title(main = "Poisson process realizations", cex.main = 1.9)
#graphics
m =25;
k = 5;
n = 17;
lambda = 3;
single_realization= 0;
realizations = list();
step_functions = list();
max_realization_values = c();
intervals = c();
average_k_time = 0;
for (i in 1:11) {
temp_intervals = 0;
for (j in 1:m) {
temp_intervals[j] = rexp(n = 1, lambda);
single_realization[j + 1] = single_realization[j] +
temp_intervals[j];
if (j == k) {
average_k_time[i] = temp_intervals[j];
}
}
intervals[i] = mean(temp_intervals);
realizations[[i]] = single_realization;
max_realization_values[i] = max(single_realization);
step_functions[[i]] = stepfun(y = seq(0, m + 1), x =
single_realization);
single_realization= 0;
}
max_realization_value = max(max_realization_values);
for (i in 1:10) {
plot.stepfun(x = step_functions[[i]], do.points = TRUE, col.points = i *
10, col.hor = i * 10, verticals = FALSE,
lwd = 3, xlab = "Time", ylab = "", main = "", xlim = c(0,max_realization_value));
par(new = TRUE);
}
plot.stepfun(x = step_functions[[11]], do.points = TRUE, col.points = 110,
col.hor = 110, verticals = FALSE,
lwd = 3, xlab = "Time", ylab = "", main = "", xlim = c(0,max_realization_value));
title(main = "Poisson process realizations", cex.main = 1.9)
#part-1
lambda=3
intervals=rexp(1000,lambda)
hist(intervals, col="lightgreen")
#part2
k=5
lambda=3
process_vals = rexp(7000, lambda)
every_k_time = c()
for (i in 1:1000) {
k_sum = 0;
lower_lim = (i - 1) * k + 1;
upper_lim = lower_lim + 5;
for (j in lower_lim:upper_lim) {
k_sum = k_sum + process_vals[j]
}
every_k_time[i] = k_sum;
}
hist(every_k_time, col="yellow")
#part3
n=100
mid_time = n * 1 / lambda;
is_done = 0;
time_values = c();
for (i in 1:1000) {
current_time = 0;
for (j in 1:n) {
current_time = current_time + rexp(1, lambda);
}
time_values[i] = current_time;
if (current_time <= mid_time) {
is_done[i] = 1;
}
else {
is_done[i] = 0;
}
}
hist(time_values, col="orange");
hist(is_done, col="red")
#part3
n=100
mid_time = n * 1 / lambda;
is_done = 0;
time_values = c();
for (i in 1:1000) {
current_time = 0;
for (j in 1:n) {
current_time = current_time + rexp(1, lambda);
}
time_values[i] = current_time;
if (current_time <= mid_time) {
is_done[i] = 1;
}
else {
is_done[i] = 0;
}
}
hist(time_values, col="orange");
#part3
n=100
mid_time = n * 1 / lambda;
is_done = 0;
time_values = c();
for (i in 1:1000) {
current_time = 0;
for (j in 1:n) {
current_time = current_time + rexp(1, lambda);
}
time_values[i] = current_time;
if (current_time <= mid_time) {
is_done[i] = 1;
}
else {
is_done[i] = 0;
}
}
hist(time_values, col="orange");
hist(is_done, col="red")
#part3
n=100
mid_time = n * 1 / lambda;
is_done = 0;
time_values = c();
for (i in 1:1000) {
current_time = 0;
for (j in 1:n) {
current_time = current_time + rexp(1, lambda);
}
time_values[i] = current_time;
if (current_time <= mid_time) {
is_done[i] = 1;
}
else {
is_done[i] = 0;
}
}
hist(time_values, col="orange");
hist(is_done, col="red")
#part3
n=100
mid_time = n * 1 / lambda;
is_done = 0;
time_values = c();
for (i in 1:1000) {
current_time = 0;
for (j in 1:n) {
current_time = current_time + rexp(1, lambda);
}
time_values[i] = current_time;
if (current_time <= mid_time) {
is_done[i] = 1;
}
else {
is_done[i] = 0;
}
}
hist(time_values, col="orange");
hist(is_done, col="red")
#part3
n=100
mid_time = n * 1 / lambda;
is_done = 0;
time_values = c();
for (i in 1:1000) {
current_time = 0;
for (j in 1:n) {
current_time = current_time + rexp(1, lambda);
}
time_values[i] = current_time;
if (current_time <= mid_time) {
is_done[i] = 1;
}
else {
is_done[i] = 0;
}
}
hist(time_values, col="orange");
hist(is_done, col="red")
#part3
n=100
mid_time = n * 1 / lambda;
is_done = 0;
time_values = c();
for (i in 1:1000) {
current_time = 0;
for (j in 1:n) {
current_time = current_time + rexp(1, lambda);
}
time_values[i] = current_time;
if (current_time <= mid_time) {
is_done[i] = 1;
}
else {
is_done[i] = 0;
}
}
hist(time_values, col="orange");
hist(is_done, col="red")
#part3
n=100
mid_time = n * 1 / lambda;
is_done = 0;
time_values = c();
for (i in 1:1000) {
current_time = 0;
for (j in 1:n) {
current_time = current_time + rexp(1, lambda);
}
time_values[i] = current_time;
if (current_time <= mid_time) {
is_done[i] = 1;
}
else {
is_done[i] = 0;
}
}
hist(is_done, col="red")
#part3
n=100
mid_time = n * 1 / lambda;
is_done = 0;
time_values = c();
for (i in 1:1000) {
current_time = 0;
for (j in 1:n) {
current_time = current_time + rexp(1, lambda);
}
time_values[i] = current_time;
if (current_time <= mid_time) {
is_done[i] = 1;
}
else {
is_done[i] = 0;
}
}
hist(is_done, col="red")
#graphics
m =25;
k = 5;
n = 17;
lambda = 3;
single_realization= 0;
realizations = list();
step_functions = list();
max_realization_values = c();
intervals = c();
average_k_time = 0;
for (i in 1:11) {
temp_intervals = 0;
for (j in 1:m) {
temp_intervals[j] = rexp(n = 1, lambda);
single_realization[j + 1] = single_realization[j] +
temp_intervals[j];
if (j == k) {
average_k_time[i] = temp_intervals[j];
}
}
intervals[i] = mean(temp_intervals);
realizations[[i]] = single_realization;
max_realization_values[i] = max(single_realization);
step_functions[[i]] = stepfun(y = seq(0, m + 1), x =
single_realization);
single_realization= 0;
}
max_realization_value = max(max_realization_values);
for (i in 1:10) {
plot.stepfun(x = step_functions[[i]], do.points = TRUE, col.points = i *
10, col.hor = i * 10, verticals = FALSE,
lwd = 3, xlab = "Time", ylab = "", main = "", xlim = c(0,max_realization_value));
par(new = TRUE);
}
plot.stepfun(x = step_functions[[11]], do.points = TRUE, col.points = 110,
col.hor = 110, verticals = FALSE,
lwd = 3, xlab = "Time", ylab = "", main = "", xlim = c(0,max_realization_value));
title(main = "Poisson process realizations", cex.main = 1.9)
#part-1
lambda=3
intervals=rexp(1000,lambda)
hist(intervals, col="lightgreen")
#part3
n=100
mid_time = n * 1 / lambda;
is_done = 0;
time_values = c();
for (i in 1:1000) {
current_time = 0;
for (j in 1:n) {
current_time = current_time + rexp(1, lambda);
}
time_values[i] = current_time;
if (current_time <= mid_time) {
is_done[i] = 1;
}
else {
is_done[i] = 0;
}
}
hist(is_done, col="red")
#part2
k=5
lambda=3
process_vals = rexp(7000, lambda)
every_k_time = c()
for (i in 1:1000) {
k_sum = 0;
lower_lim = (i - 1) * k + 1;
upper_lim = lower_lim + 5;
for (j in lower_lim:upper_lim) {
k_sum = k_sum + process_vals[j]
}
every_k_time[i] = k_sum;
}
hist(every_k_time, col="yellow")
#part3
n=100
mid_time = n * 1 / lambda;
is_done = 0;
time_values = c();
for (i in 1:1000) {
current_time = 0;
for (j in 1:n) {
current_time = current_time + rexp(1, lambda);
}
time_values[i] = current_time;
if (current_time <= mid_time) {
is_done[i] = 1;
}
else {
is_done[i] = 0;
}
}
hist(is_done, col="red")
